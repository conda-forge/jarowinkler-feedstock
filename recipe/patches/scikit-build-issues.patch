diff --git a/CMakeLists.txt b/CMakeLists.txt
index 709c81f..276ec51 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,26 +1,38 @@
-cmake_minimum_required(VERSION 3.12.0)
+cmake_minimum_required(VERSION 3.12...3.24)

-cmake_policy(SET CMP0054 NEW)
 set(SKBUILD_LINK_LIBRARIES_KEYWORD PRIVATE)
-
+set(Python_FIND_IMPLEMENTATIONS CPython PyPy)
 set(THREADS_PREFER_PTHREAD_FLAG ON)
-if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-    set(CMAKE_OSX_DEPLOYMENT_TARGET "10.9" CACHE STRING "Minimum OS X deployment version")
-endif()

 project(jarowinkler LANGUAGES C CXX)

-find_package(PythonExtensions REQUIRED)
-find_package(Python COMPONENTS Interpreter Development)
+if(CMAKE_VERSION VERSION_LESS 3.18)
+    find_package(Python COMPONENTS Interpreter Development REQUIRED)
+else()
+    set(Python_ARTIFACTS_INTERACTIVE TRUE)
+    find_package(Python COMPONENTS Interpreter Development.Module REQUIRED)
+endif()
+if("${Python_INTERPRETER_ID}" STREQUAL "PyPy")
+    message(STATUS "PyPy SOABI: ${Python_SOABI}")
+    execute_process(
+        COMMAND "${Python_EXECUTABLE}" -c
+                "import sysconfig; print(sysconfig.get_config_var('EXT_SUFFIX').split('.')[1])"
+        OUTPUT_VARIABLE Python_SOABI
+        OUTPUT_STRIP_TRAILING_WHITESPACE COMMAND_ECHO STDOUT)
+    message(STATUS "Corrected SOABI: ${Python_SOABI}")
+endif()
+
+
+
 include(FetchContent)

 set(JW_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)

 find_package(jaro_winkler 1.0.2 QUIET)
 if (jaro_winkler_FOUND)
-    message("Using system supplied version of jaro_winkler")
+    message(STATUS "Using system supplied version of jaro_winkler")
 else()
-    message("Using packaged version of jaro_winkler")
+    message(STATUS "Using packaged version of jaro_winkler")
     add_subdirectory(extern/jarowinkler-cpp)
 endif()

diff --git a/src/jarowinkler/CMakeLists.txt b/src/jarowinkler/CMakeLists.txt
index 8caf71a..6fd48e4 100644
--- a/src/jarowinkler/CMakeLists.txt
+++ b/src/jarowinkler/CMakeLists.txt
@@ -11,9 +11,8 @@ function(create_cython_target _name)
 endfunction(create_cython_target)

 create_cython_target(_initialize_cpp)
-add_library(_initialize_cpp MODULE ${_initialize_cpp})
+Python_add_library(_initialize_cpp MODULE WITH_SOABI ${_initialize_cpp})
 target_compile_features(_initialize_cpp PUBLIC cxx_std_14)
 target_include_directories(_initialize_cpp PRIVATE ${RF_CAPI_PATH} ${JW_BASE_DIR}/jarowinkler)
 target_link_libraries(_initialize_cpp PRIVATE jaro_winkler::jaro_winkler)
-python_extension_module(_initialize_cpp)
 install(TARGETS _initialize_cpp LIBRARY DESTINATION src/jarowinkler)
